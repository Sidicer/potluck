#user  nobody;
worker_processes  1;

# This default error log path is compiled-in to make sure configuration parsing
# errors are logged somewhere, especially during unattended boot when stderr
# isn't normally logged anywhere. This path will be touched on every nginx
# start regardless of error log location configured here. See
# https://trac.nginx.org/nginx/ticket/147 for more info.
#
#error_log  /var/log/nginx/error.log;
#

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    # new additions to fix 502 issues
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    fastcgi_send_timeout 600s;
    fastcgi_read_timeout 600s;

    upstream php-handler {
        server unix:/var/run/php82-fpm.sock;
    }

    # Set the `immutable` cache control options only for assets with a cache busting `v` argument
	map $arg_v $asset_immutable {
		"" "";
		default ", immutable";
	}

    server {
        listen 80 backlog=128 reuseport so_keepalive=on;
        server_name _;

        root /usr/local/www/nextcloud;
        index index.php index.html /index.php$request_uri;

        client_max_body_size 512M;
        client_body_timeout 600s;

	    # Prevent nginx HTTP Server Detection
	    server_tokens off;

        fastcgi_buffers 64 4K;
        # experimenting
        fastcgi_buffer_size 64k;
        # experimenting
        fastcgi_busy_buffers_size 64k;

        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;";

        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Enable gzip but do not remove ETag headers
        gzip on;
        gzip_vary on;
        gzip_comp_level 4;
        gzip_min_length 256;
        gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
        #gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;
        gzip_types application/atom+xml text/javascript application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/wasm application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

        # HTTP response headers borrowed from Nextcloud `.htaccess`
        add_header Referrer-Policy                      "no-referrer"   always;
        add_header X-Content-Type-Options               "nosniff"       always;
        add_header X-Download-Options                   "noopen"        always;
        add_header X-Frame-Options                      "SAMEORIGIN"    always;
        add_header X-Permitted-Cross-Domain-Policies    "none"          always;
        add_header X-Robots-Tag                         "noindex, nofollow" always;
        add_header X-XSS-Protection                     "1; mode=block" always;

        # Remove X-Powered-By, which is an information leak
        fastcgi_hide_header X-Powered-By;

        location = / {
            if ( $http_user_agent ~ ^DavClnt ) {
                return 302 /remote.php/webdav/$is_args$args;
            }
        }

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ^~ /.well-known {
           # The rules in this block are an adaptation of the rules
           # in the Nextcloud `.htaccess` that concern `/.well-known`.
           location = /.well-known/carddav { return 301 /remote.php/dav/; }
           location = /.well-known/caldav  { return 301 /remote.php/dav/; }
           location /.well-known/acme-challenge    { try_files $uri $uri/ =404; }
           location /.well-known/pki-validation    { try_files $uri $uri/ =404; }
           # Let Nextcloud's API for `/.well-known` URIs handle all other
           # requests by passing them to the front-end controller.
           return 301 /index.php$request_uri;
        }

        # Rules borrowed from `.htaccess` to hide certain paths from clients
        location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)(?:$|/)  { return 404; }
        location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console)                { return 404; }

        # experimenting
        #location ~* \.js$ {
        #    # You can specify any additional settings here, if needed.
        #    try_files $uri /index.php$request_uri;
        #}

        # php config let nginx talk to php socket
        #location ~ \.php(?:$|/) {
        # experimenting
        location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) {
            #old#rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+|.+\/richdocumentscode\/proxy) /index.php$request_uri;
            #remove#rewrite ^/(?!index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|ocs-provider\/.+|.+\/richdocumentscode(_arm64)?\/proxy) /index.php$request_uri;
            
            fastcgi_split_path_info ^(.+?\.php)(/.*)$;
            set $path_info $fastcgi_path_info;
            try_files $fastcgi_script_name =404;
            # include the fastcgi_param setting
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $path_info;
            # turning off as https handled by haproxy
            fastcgi_param HTTPS on;
            fastcgi_param modHeadersAvailable true;         # Avoid sending the security headers twice
            fastcgi_param front_controller_active true;     # Enable pretty urls
            fastcgi_pass php-handler;
            fastcgi_intercept_errors on;
            fastcgi_request_buffering off;
            fastcgi_max_temp_file_size 0;
            # Mitigate https://httpoxy.org/ vulnerabilities
            fastcgi_param HTTP_PROXY "";
            # increase from 300 to 600
            fastcgi_read_timeout 600;
            fastcgi_index index.php;
        }

        # experimenting
        location ~ ^/(?:updater|ocs-provider)(?:$|/) {
            try_files $uri/ =404;
            index index.php;
        }

        #location ~ \.(?:css|js|svg|gif|png|jpg|ico)$ {
        #    try_files $uri /index.php$request_uri;
        #    expires 6M;         # Cache-Control policy borrowed from `.htaccess`
        #    access_log off;     # Optional: Don't log access to assets
        #}

        #location ~ \.(?:css|js|svg|gif|png|jpg|ico|wasm|tflite|map)$ {
        location ~ \.(?:css|js|mjs|svg|gif|ico|jpg|png|webp|wasm|tflite|map|ogg|flac)$ {
            try_files $uri /index.php$request_uri;
            #expires 6M;         # Cache-Control policy borrowed from `.htaccess`
            # HTTP response headers borrowed from Nextcloud `.htaccess`
		    add_header Cache-Control                     "public, max-age=15778463$asset_immutable";
		    add_header Referrer-Policy                   "no-referrer"       always;
		    add_header X-Content-Type-Options            "nosniff"           always;
		    add_header X-Frame-Options                   "SAMEORIGIN"        always;
		    add_header X-Permitted-Cross-Domain-Policies "none"              always;
		    add_header X-Robots-Tag                      "noindex, nofollow" always;
		    add_header X-XSS-Protection                  "1; mode=block"     always;
            access_log off;     # Optional: Don't log access to assets
            location ~ \.wasm$ {
                default_type application/wasm;
            }
        }

        #location ~ \.woff2?$ {
        location ~ \.(otf|woff2?)$ {
            try_files $uri /index.php$request_uri;
            expires 7d;         # Cache-Control policy borrowed from `.htaccess`
            access_log off;     # Optional: Don't log access to assets
        }

        location ~ ^/\.user\.ini {
            deny all;
        }

        # Rule borrowed from `.htaccess`
        location /remote {
          return 301 /remote.php$request_uri;
        }

        location / {
          try_files $uri $uri/ /index.php$request_uri;
        }
    }
}
