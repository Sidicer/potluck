#!/bin/sh
RUNS_IN_NOMAD=false
COOKLOG=/var/log/cook.log

pot_seasoned_exit() {
    [ ! -e /usr/local/etc/pot-is-seasoned ] && \
      touch /usr/local/etc/pot-is-seasoned
    # If this pot flavour is blocking (i.e. it should not return), there is
    # no /tmp/environment.sh created by pot and we now after configuration
    # block indefinitely
    if [ "$RUNS_IN_NOMAD" = "true" ]; then
        service cook onestop || true
        service cook onedisable || true
        /bin/sh /etc/rc
        tail -f /dev/null
    fi
    exit 0
}

# No need to change this, just ensures configuration is done only once
[ -e /usr/local/etc/pot-is-seasoned ] && pot_seasoned_exit

########################################################################
## Functions and settings
########################################################################

log() {
    echo "$(date '+%Y-%m-%dT%H:%M:%S') $*" | tee -a $COOKLOG
}

convert_to_required_format() {
    echo "$1" | sed 's/\([^,]*\)/"\1"/g'
}

set -e
export HOME=/root

if [ -e /tmp/environment.sh ]
then
    # shellcheck disable=SC1091
    . /tmp/environment.sh

    # XXX: Remove some things from here later
    cp -a /tmp/environment.sh /root/.env.cook
fi


########################################################################
## Check config
########################################################################

required_args="DATACENTER IP NODENAME CONSULSERVERS GOSSIPKEY DOMAIN EMAIL PUBLICIP"
optional_args="REMOTELOG IMAGE LINK RESOLUTION"

for var in $required_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "$var is unset - see documentation to configure this flavour."
    exit 1
  fi
done

for var in $optional_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "Optional $var is unset - see documentation to configure this flavour."
  fi
done

########################################################################
## Provision image
########################################################################

# Input is "10.0.0.1,10.2.0.1,10.45.2.4"
# Expected output is "10.0.0.1","10.2.0.1","10.45.2.4"

if [ -n "${CONSULSERVERS+x}" ]; then
    FIXCONSULSERVERS=$(convert_to_required_format "$CONSULSERVERS")
    export FIXCONSULSERVERS
fi

# stop services
timeout --foreground 10 \
  service consul onestop || service consul onestop || true
killall -9 consul || true

export PATH=/usr/local/share/cook/bin:$PATH

if [ -n "${REMOTELOG}" ]; then
    log "Configure and start syslog-ng"
    configure-syslog-ng.sh
fi

log "Setup node_exporter"
configure-node-exporter.sh

log "Configure consul"
configure-consul.sh

log "Start consul and wait for it to become stable"
timeout --foreground 120 \
  sh -c 'while ! service consul status; do
    service consul start || true; sleep 5;
  done'

# Disabling, only practical in VNET jails
# In future a parameter can be added to enable on VNET jails.
#log "Set up local unbound using local consul once consul running"
#configure-local-unbound.sh

log "Start node_exporter"
service node_exporter start

# Generate a password for stitching up the various parts of the configuration
# shellcheck disable=SC2002
KEYPASSWORD="$(cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 16; echo)"
export KEYPASSWORD

# Generate a password for the turnserver and then hash it with turnadmin
# shellcheck disable=SC2002
TURNPASSWORD="$(cat /dev/urandom | env LC_CTYPE=C tr -dc a-zA-Z0-9 | head -c 16; echo)"
# make sure to get only the final line output as turnadmin produces several lines now
HASHTURNPASSWORD=$(/usr/local/bin/turnadmin -P -p "$TURNPASSWORD" | tail -1)
export HASHTURNPASSWORD

log "Configure acme.sh"
configure-acme.sh

log "Configure prosody"
configure-prosody.sh

log "Configure nginx"
configure-nginx.sh

log "Configure turnserver"
configure-turnserver.sh

log "Configure jitsi-videobridge"
configure-jitsi-videobridge.sh

log "Configure jicofo"
configure-jicofo.sh

log "Configure nginx"
configure-nginx.sh

# Startup ordering as outlined in  https://youtu.be/LJOpSDcwWIA
# 1. web
# 2. turnserver
# 2. prosody
# 3. jicofo
# 4. jitsi-videobridge

log "Start nginx"
service nginx start || true
#timeout --foreground 120 \
#  sh -c 'while ! service nginx status; do
#    service nginx start || true; sleep 5;
#  done'

log "Start turnserver"
service turnserver start || true

log "Start prosody"
service prosody start || true

# adding pause
log "First pause"
sleep 5 || true

log "Start jicofo"
service jicofo start || true

log "Start jitsi-videobridge"
service jitsi-videobridge start || true
#timeout --foreground 120 \
#  sh -c 'while ! service jitsi-videobridge status; do
#    service jitsi-videobridge start || true; sleep 5;
#  done'

log "Exit seasoned"
pot_seasoned_exit
