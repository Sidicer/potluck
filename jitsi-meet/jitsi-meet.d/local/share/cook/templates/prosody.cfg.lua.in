pidfile = "/var/run/prosody/prosody.pid"
interfaces = { "127.0.0.1" }
admins = { "focus@auth.%%domain%%" }
plugin_paths = { "/usr/local/lib/jitsi-prosody-plugins/" }

modules_enabled = {

        -- Generally required
                "roster"; -- Allow users to have a roster. Recommended ;)
                "saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
                "tls"; -- Add support for secure TLS on c2s/s2s connections
                "dialback";
                "carbons"; -- Keep multiple clients in sync
                "pep"; -- Enables users to publish their avatar, mood, activity, playing music and more
                "private"; -- Private XML storage (for room bookmarks, etc.)
                "blocklist"; -- Allow users to block communications with other users
                "vcard4"; -- User profiles (stored in PEP)
                "vcard_legacy"; -- Conversion between legacy vCard and PEP Avatar, vcard

        -- Nice to have
                "version"; -- Replies to server version requests
                "uptime"; -- Report how long server has been running
                "time"; -- Let others know the time here on this server
                "ping"; -- Replies to XMPP pings with pongs
                "register"; -- Allow users to register on this server using a client and change passwords
                --"mam"; -- Store messages in an archive and allow users to access it
                --"csi_simple"; -- Simple Mobile optimizations

        -- Admin interfaces
                "admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
                --"admin_telnet"; -- Opens telnet console interface on localhost port 5582

        -- HTTP modules
                --"bosh"; -- Enable BOSH clients, aka Jabber over HTTP
                --"websocket"; -- XMPP over WebSockets
                --"http_files"; -- Serve static files from a directory over HTTP

        -- Other specific functionality
                --"limits"; -- Enable bandwidth limiting for XMPP connections
                --"groups"; -- Shared roster support
                --"server_contact_info"; -- Publish contact information for this service
                --"announce"; -- Send announcement to all online users
                --"welcome"; -- Welcome users who register accounts
                --"watchregistrations"; -- Alert admins of registrations
                --"motd"; -- Send a message to users when they log in
                --"legacyauth"; -- Legacy authentication. Only used by some old clients and bots.
                --"proxy65"; -- Enables a file transfer proxy service which clients behind NAT can use
}

c2s_require_encryption = true

s2s_require_encryption = true

s2s_secure_auth = false

--s2s_insecure_domains = { "insecure.example" }

authentication = "internal_hashed"

archive_expires_after = "1w" -- Remove archived messages after 1 week

log = {
        info = "/var/log/prosody/prosody.log";
        error = "/var/log/prosody/prosody.err";
        -- "*syslog"; -- Uncomment this for logging to syslog
        -- "*console"; -- Log to the console, useful for debugging with daemonize=false
}

-- domain mapper options, must at least have domain base set to use the mapper
muc_mapper_domain_base = "%%domain%%";

--cross_domain_bosh = true;
consider_bosh_secure = true;
https_ports = { }; -- Remove this line to prevent listening on port 5284

-- https://ssl-config.mozilla.org/#server=haproxy&version=2.1&config=intermediate&openssl=1.1.0g&guideline=5.4
ssl = {
    protocol = "tlsv1_2+";
    ciphers = "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
}

unlimited_jids = {
    "focus@auth.%%domain%%",
    "jvb@auth.%%domain%%"
}

certificates = "/var/db/prosody"

VirtualHost "%%domain%%"
    authentication = "anonymous"
    ssl = {
        key = "/var/db/prosody/%%domain%%.key";
        certificate = "/var/db/prosody/%%domain%%.crt";
    }
    av_moderation_component = "avmoderation.%%domain%%"
    speakerstats_component = "speakerstats.%%domain%%"
    conference_duration_component = "conferenceduration.%%domain%%"
    -- we need bosh
    modules_enabled = {
        "bosh";
        "pubsub";
        "ping"; -- Enable mod_ping
        "speakerstats";
        "external_services";
        "conference_duration";
        "muc_lobby_rooms";
        "muc_breakout_rooms";
        "av_moderation";
        "saslauth";
    }
    c2s_require_encryption = false
    lobby_muc = "lobby.%%domain%%"
    breakout_rooms_muc = "breakout.%%domain%%"
    main_muc = "conference.%%domain%%"
    -- muc_lobby_whitelist = { "recorder.%%domain%%" } -- Here we can whitelist jibri to enter lobby enabled rooms

Component "conference.%%domain%%" "muc"
    restrict_room_creation = true
    storage = "memory"
    modules_enabled = {
        "muc_meeting_id";
        "muc_domain_mapper";
        "polls";
        --"token_verification";
        "muc_rate_limit";
        "saslauth";
    }
    admins = { "focus@auth.%%domain%%" }
    muc_room_locking = false
    muc_room_default_public_jids = true
    c2s_require_encryption = false

Component "breakout.%%domain%%" "muc"
    restrict_room_creation = true
    storage = "memory"
    modules_enabled = {
        "muc_meeting_id";
        "muc_domain_mapper";
        --"token_verification";
        "muc_rate_limit";
        "polls";
        "saslauth";
    }
    admins = { "focus@auth.%%domain%%" }
    muc_room_locking = false
    muc_room_default_public_jids = true

-- internal muc component
Component "internal.auth.%%domain%%" "muc"
    storage = "memory"
    modules_enabled = {
        "ping";
    }
    admins = { "focus@auth.%%domain%%", "jvb@auth.%%domain%%" }
    muc_room_locking = false
    muc_room_default_public_jids = true
    c2s_require_encryption = false

VirtualHost "auth.%%domain%%"
    modules_enabled = {
        "limits_exception";
        "saslauth";
    }
    -- authentication = "internal_plain" 
    c2s_require_encryption = false
    authentication = "internal_hashed"

Component "focus.%%domain%%" "client_proxy"
    target_address = "focus@auth.%%domain%%"

Component "speakerstats.%%domain%%" "speakerstats_component"
    muc_component = "conference.%%domain%%"

Component "conferenceduration.%%domain%%" "conference_duration_component"
    muc_component = "conference.%%domain%%"

Component "avmoderation.%%domain%%" "av_moderation_component"
    muc_component = "conference.%%domain%%"

Component "lobby.%%domain%%" "muc"
    storage = "memory"
    restrict_room_creation = true
    muc_room_locking = false
    muc_room_default_public_jids = true
    modules_enabled = {
        "muc_rate_limit";
        "polls";
        "saslauth";
    }
    c2s_require_encryption = false

--Component "jitsi-videobridge.%%domain%%"
--    component_secret = "%%keypassword%%"
