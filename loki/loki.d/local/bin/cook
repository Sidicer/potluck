#!/bin/sh
RUNS_IN_NOMAD=false
COOKLOG=/var/log/cook.log

pot_seasoned_exit() {
    [ ! -e /usr/local/etc/pot-is-seasoned ] && \
      touch /usr/local/etc/pot-is-seasoned
    # If this pot flavour is blocking (i.e. it should not return), there is
    # no /tmp/environment.sh created by pot and we now after configuration
    # block indefinitely
    if [ "$RUNS_IN_NOMAD" = "true" ]; then
        /bin/sh /etc/rc
        tail -f /dev/null
    fi
    exit 0
}

# always disable sshd, we don't need direct access
# XXX: Do this when baking the image
service sshd stop || true
service sshd disable || true

# No need to change this, just ensures configuration is done only once
[ -e /usr/local/etc/pot-is-seasoned ] && pot_seasoned_exit

########################################################################
## Functions and settings
########################################################################

log() {
    echo "$(date '+%Y-%m-%dT%H:%M:%S') $*" | tee -a $COOKLOG
}

set -e
export HOME=/root

if [ -e /tmp/environment.sh ]
then
    # shellcheck disable=SC1091
    . /tmp/environment.sh

    # XXX: Remove some things from here later
    cp -a /tmp/environment.sh /root/.env.cook
fi


########################################################################
## Check config
########################################################################

required_args="DATACENTER IP NODENAME CONSULSERVERS ATTL BTTL"
optional_args="IP" # hack, might bring back REMOTEIP

for var in $required_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "$var is unset - see documentation to configure this flavour."
    exit 1
  fi
done

for var in $optional_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "Optional $var is unset - see documentation to configure this flavour."
  fi
done

########################################################################
## Provision image
########################################################################

# stop services
service vault onestop || true
timeout --foreground 10 \
  service consul onestop || service consul onestop || true
killall -9 consul || true

# create nodeexport user, needed for chown, removed from config
# node_exporter script
log "Create nodeexport user"
/usr/sbin/pw useradd -n nodeexport -c 'nodeexporter user' -m \
  -s /usr/bin/nologin -h -

# create loki user
log "Create loki user"
/usr/sbin/pw useradd -n loki -c 'loki user' -m \
  -s /usr/bin/nologin -h -

# add group for accessing certs (shared between services)
log "Create certaccess group"
/usr/sbin/pw groupadd certaccess

# add the nodeexport user to the certaccess group
log "Add nodeexport user to certaccess group"
/usr/sbin/pw usermod nodeexport -G certaccess

# add the loki user to the certaccess group
log "Add loki user to certaccess group"
/usr/sbin/pw usermod loki -G certaccess

# setup directories for vault usage
mkdir -p /mnt/templates
#chown -R loki /mnt/certs
mkdir -p /mnt/consulcerts
chown -R consul /mnt/consulcerts
mkdir -p /mnt/log
mkdir -p /mnt/metricscerts/hash
chown -R loki:certaccess /mnt/metricscerts
mkdir -p /mnt/vault

export PATH=/usr/local/share/cook/bin:$PATH

log "Set up local_unbound using cluster resolvers"
setup-local-unbound-provision.sh

log "Wait until we are able to resolve active vault instance"
timeout --foreground 120 \
  sh -c 'while ! host -ta active.vault.service.consul; do sleep 1; done'

log "Unwrap cluster credentials"
unwrap-cluster-credentials.sh

log "Unwrap consul credentials"
unwrap-consul-credentials.sh

log "Unwrap metrics credentials"
unwrap-metrics-credentials.sh

log "Configure consul-template"
configure-consul-template.sh

log "Setup node_exporter"
configure-node-exporter.sh

# start early, as consul-template will restart it
log "Start node_exporter"
service node_exporter start

log "Configure vaultproxy"
configure-vaultproxy.sh

log "Start vaultproxy"
timeout --foreground 120 \
  sh -c 'while ! service nginx status vaultproxy; do
    service nginx start vaultproxy || true; sleep 3;
  done'

log "Starting consul-template"
service consul-template start

log "Waiting up to 20 seconds for consul-template to start"
timeout --foreground 20 \
  sh -c 'while ! service consul-template status; do sleep 1; done'

log "Configure consul"
configure-consul.sh

log "Start consul and wait for it to become stable"
timeout --foreground 120 \
  sh -c 'while ! service consul status; do
    service consul start || true; sleep 5;
  done'

log "Set up local_unbound using local consul"
setup-local-unbound.sh

log "Wait until we are able to resolve consul"
timeout --foreground 120 \
  sh -c 'while ! host -ta consul.service.consul; do sleep 1; done'

log "Configure loki and promtail"
configure-loki.sh

# start loki and promtail
log "Start loki and wait for it to become stable"
timeout --foreground 120 \
  sh -c 'while ! service loki status; do
    service loki start || true; sleep 5;
  done'

log "Start promtail and wait for it to become stable"
timeout --foreground 120 \
  sh -c 'while ! service promtail status; do
    service promtail start || true; sleep 5;
  done'

# unlike in other images, this always starts, as it's the server
log "Setup and start syslog-ng"
configure-syslog-ng.sh

log "Exit seasoned"
pot_seasoned_exit
